{"ast":null,"code":"var _jsxFileName = \"/home/joaoroco/Desktop/REACT/PROJETO/lab_project/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\n\n// 5. The reducer - this is used to update the state, based on the action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  let new_expenses = [];\n  switch (action.type) {\n    case 'ADD_BUDGET':\n      let updatedqty = false;\n      state.expenses.map(expense => {\n        alert(expense.name);\n        if (expense.name === action.payload.name) {\n          alert(expense.name);\n          expense.budget = expense.budget + action.payload.budget;\n          updatedqty = true;\n        }\n        new_expenses.push(expense);\n        return true;\n      });\n      state.expenses = new_expenses;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'RED_BUDGET':\n      state.expenses.map(expense => {\n        if (expense.name === action.payload.name) {\n          expense.budget = expense.budget - action.payload.budget;\n        }\n        expense.budget = expense.budget < 0 ? 0 : expense.budget;\n        new_expenses.push(expense);\n        return true;\n      });\n      state.expenses = new_expenses;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'DELETE_ITEM':\n      state.expenses.map(expense => {\n        if (expense.name === action.payload.name) {\n          expense.budget = 0;\n        }\n        new_expenses.push(expense);\n        return true;\n      });\n      state.expenses = new_expenses;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'CHG_LOCATION':\n      action.type = \"DONE\";\n      state.Location = action.payload;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\n\n// 1. Sets the initial state when the app loads MUDAR Quantity para budget\n_c = AppReducer;\nexport const initialState = {\n  expenses: [{\n    id: \"IT Department\",\n    name: 'IT Department',\n    budget: 0,\n    unitprice: 500\n  }, {\n    id: \"Finance Department\",\n    name: 'Finance Department',\n    budget: 0,\n    unitprice: 300\n  }, {\n    id: \"Human Resources Department\",\n    name: 'Human Resources Department',\n    budget: 0,\n    unitprice: 400\n  }, {\n    id: \"Sales Department\",\n    name: 'Sales Department',\n    budget: 0,\n    unitprice: 600\n  }, {\n    id: \"Marketing Department\",\n    name: 'Marketing Department',\n    budget: 0,\n    unitprice: 200\n  }],\n  Location: '£'\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = /*#__PURE__*/createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = props => {\n  _s();\n  // 4. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const totalExpenses = state.expenses.reduce((total, item) => {\n    return total = total + item.unitprice * item.quantity;\n  }, 0);\n  state.BudgetValue = totalExpenses;\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses: state.expenses,\n      BudgetValue: state.BudgetValue,\n      dispatch,\n      Location: state.Location,\n      RemBudget: state.CartValue\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = AppProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","jsxDEV","_jsxDEV","AppReducer","state","action","new_expenses","type","updatedqty","expenses","map","expense","alert","name","payload","budget","push","Location","_c","initialState","id","unitprice","AppContext","AppProvider","props","_s","dispatch","totalExpenses","reduce","total","item","quantity","BudgetValue","Provider","value","RemBudget","CartValue","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/joaoroco/Desktop/REACT/PROJETO/lab_project/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// 5. The reducer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n    let new_expenses = [];\n    switch (action.type) {\n        case 'ADD_BUDGET':\n            let updatedqty = false;\n            \n            state.expenses.map((expense)=>{\n                alert(expense.name);\n                if(expense.name === action.payload.name) {\n                    alert(expense.name);\n                    expense.budget = expense.budget + action.payload.budget;\n                    updatedqty = true;\n                }\n                new_expenses.push(expense);\n                return true;\n            })\n            state.expenses = new_expenses;\n            action.type = \"DONE\";\n            return {\n                ...state,\n            };\n\n            case 'RED_BUDGET':\n                state.expenses.map((expense)=>{\n                  \n                    if(expense.name === action.payload.name) {\n                        expense.budget = expense.budget - action.payload.budget;\n                    }\n                    expense.budget = expense.budget < 0 ? 0: expense.budget;\n                    new_expenses.push(expense);\n                    return true;\n                })\n                state.expenses = new_expenses;\n                action.type = \"DONE\";\n                return {\n                    ...state,\n                };\n        case 'DELETE_ITEM':\n            state.expenses.map((expense)=>{\n                if(expense.name === action.payload.name) {\n                    expense.budget = 0;\n                }\n                new_expenses.push(expense);\n                return true;\n            })\n            state.expenses = new_expenses;\n            action.type = \"DONE\";\n            return {\n                ...state,\n            };\n    case 'CHG_LOCATION':\n            action.type = \"DONE\";\n            state.Location = action.payload;\n            return {\n                ...state\n            }\n\n        default:\n            return state;\n    }\n};\n\n// 1. Sets the initial state when the app loads MUDAR Quantity para budget\nexport const initialState = {\n    expenses: [\n        { id: \"IT Department\", name: 'IT Department', budget: 0, unitprice: 500 },\n        { id: \"Finance Department\", name: 'Finance Department', budget: 0, unitprice: 300 },\n        { id: \"Human Resources Department\", name: 'Human Resources Department', budget: 0, unitprice: 400 },\n        { id: \"Sales Department\", name: 'Sales Department', budget: 0, unitprice: 600 },\n        { id: \"Marketing Department\", name: 'Marketing Department', budget: 0, unitprice: 200 },\n    ],\n    Location: '£'\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n    // 4. Sets up the app state. takes a reducer, and an initial state\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const totalExpenses = state.expenses.reduce((total, item) => {\n        return (total = total + (item.unitprice*item.quantity));\n    }, 0);\nstate.BudgetValue = totalExpenses;\n\n    return (\n        <AppContext.Provider\n            value={{\n                expenses: state.expenses,\n                BudgetValue: state.BudgetValue,\n                dispatch,\n                Location: state.Location,\n                RemBudget: state.CartValue\n            }}\n        >\n            {props.children}\n        </AppContext.Provider>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}