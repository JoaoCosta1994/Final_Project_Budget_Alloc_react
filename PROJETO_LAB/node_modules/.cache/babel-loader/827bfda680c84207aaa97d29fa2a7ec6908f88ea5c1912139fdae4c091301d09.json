{"ast":null,"code":"var _jsxFileName = \"/home/joaoroco/Desktop/REACT/PROJETO/lab_project/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\n\n// 5. The reducer - this is used to update the state, based on the action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  let new_expenses = [];\n  switch (action.type) {\n    case 'ADD_QUANTITY':\n      let updatedqty = false;\n      state.expenses.map(expense => {\n        if (expense.name === action.payload.name) {\n          expense.quantity = expense.quantity + action.payload.quantity;\n          updatedqty = true;\n        }\n        new_expenses.push(expense);\n        return true;\n      });\n      state.expenses = new_expenses;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'RED_QUANTITY':\n      state.expenses.map(expense => {\n        if (expense.name === action.payload.name) {\n          expense.quantity = expense.quantity - action.payload.quantity;\n        }\n        expense.quantity = expense.quantity < 0 ? 0 : expense.quantity;\n        new_expenses.push(expense);\n        return true;\n      });\n      state.expenses = new_expenses;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'DELETE_ITEM':\n      state.expenses.map(expense => {\n        if (expense.name === action.payload.name) {\n          expense.quantity = 0;\n        }\n        new_expenses.push(expense);\n        return true;\n      });\n      state.expenses = new_expenses;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'CHG_LOCATION':\n      action.type = \"DONE\";\n      state.Location = action.payload;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\n\n// 1. Sets the initial state when the app loads\n_c = AppReducer;\nconst initialState = {\n  expenses: [{\n    id: \"Shirt\",\n    name: 'Shirt',\n    quantity: 0,\n    unitprice: 500\n  }, {\n    id: \"Jeans\",\n    name: 'Jeans',\n    quantity: 0,\n    unitprice: 300\n  }, {\n    id: \"Dress\",\n    name: 'Dress',\n    quantity: 0,\n    unitprice: 400\n  }, {\n    id: \"Dinner set\",\n    name: 'Dinner set',\n    quantity: 0,\n    unitprice: 600\n  }, {\n    id: \"Bags\",\n    name: 'Bags',\n    quantity: 0,\n    unitprice: 200\n  }],\n  Location: '£'\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = /*#__PURE__*/createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = props => {\n  _s();\n  // 4. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const totalExpenses = state.expenses.reduce((total, item) => {\n    return total = total + item.unitprice * item.quantity;\n  }, 0);\n  state.CartValue = totalExpenses;\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses: state.expenses,\n      BudgetValue: state.CartValue,\n      dispatch,\n      Location: state.Location,\n      RemBudget: state.CartValue\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = AppProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","jsxDEV","_jsxDEV","AppReducer","state","action","new_expenses","type","updatedqty","expenses","map","expense","name","payload","quantity","push","Location","_c","initialState","id","unitprice","AppContext","AppProvider","props","_s","dispatch","totalExpenses","reduce","total","item","CartValue","Provider","value","BudgetValue","RemBudget","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/joaoroco/Desktop/REACT/PROJETO/lab_project/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// 5. The reducer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n    let new_expenses = [];\n    switch (action.type) {\n        case 'ADD_QUANTITY':\n            let updatedqty = false;\n            state.expenses.map((expense)=>{\n                if(expense.name === action.payload.name) {\n                    expense.quantity = expense.quantity + action.payload.quantity;\n                    updatedqty = true;\n                }\n                new_expenses.push(expense);\n                return true;\n            })\n            state.expenses = new_expenses;\n            action.type = \"DONE\";\n            return {\n                ...state,\n            };\n\n            case 'RED_QUANTITY':\n                state.expenses.map((expense)=>{\n                    if(expense.name === action.payload.name) {\n                        expense.quantity = expense.quantity - action.payload.quantity;\n                    }\n                    expense.quantity = expense.quantity < 0 ? 0: expense.quantity;\n                    new_expenses.push(expense);\n                    return true;\n                })\n                state.expenses = new_expenses;\n                action.type = \"DONE\";\n                return {\n                    ...state,\n                };\n        case 'DELETE_ITEM':\n            state.expenses.map((expense)=>{\n                if(expense.name === action.payload.name) {\n                    expense.quantity = 0;\n                }\n                new_expenses.push(expense);\n                return true;\n            })\n            state.expenses = new_expenses;\n            action.type = \"DONE\";\n            return {\n                ...state,\n            };\n    case 'CHG_LOCATION':\n            action.type = \"DONE\";\n            state.Location = action.payload;\n            return {\n                ...state\n            }\n\n        default:\n            return state;\n    }\n};\n\n// 1. Sets the initial state when the app loads\nconst initialState = {\n    expenses: [\n        { id: \"Shirt\", name: 'Shirt', quantity: 0, unitprice: 500 },\n        { id: \"Jeans\", name: 'Jeans', quantity: 0, unitprice: 300 },\n        { id: \"Dress\", name: 'Dress', quantity: 0, unitprice: 400 },\n        { id: \"Dinner set\", name: 'Dinner set', quantity: 0, unitprice: 600 },\n        { id: \"Bags\", name: 'Bags', quantity: 0, unitprice: 200 },\n    ],\n    Location: '£'\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n    // 4. Sets up the app state. takes a reducer, and an initial state\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const totalExpenses = state.expenses.reduce((total, item) => {\n        return (total = total + (item.unitprice*item.quantity));\n    }, 0);\nstate.CartValue = totalExpenses;\n\n    return (\n        <AppContext.Provider\n            value={{\n                expenses: state.expenses,\n                BudgetValue: state.CartValue,\n                dispatch,\n                Location: state.Location,\n                RemBudget: state.CartValue\n            }}\n        >\n            {props.children}\n        </AppContext.Provider>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}